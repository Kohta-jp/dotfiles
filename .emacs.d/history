;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(read-expression-history irony--server-install-command-history minibuffer-history consult--find-history empty-history buffer-name-history consult--buffer-history consult--line-history extended-command-history file-name-history))
(setq irony--server-install-command-history '("cmake -DCMAKE_INSTALL_PREFIX\\=/home/atom/.emacs.d/irony/  /home/atom/.emacs.d/elpa/irony-20220110.849/server && cmake --build . --use-stderr --config Release --target install"))
(setq minibuffer-history '("act" "##"))
(setq buffer-name-history '("sample1" "*GNU Emacs*" "sidebart.html" "base.html" "index.html" "urls.py" "sidebarp.html" "views.py" "models.py" "views.py" "urls.py" "sidebart.html" "views.py" "models.py" "admin.py" "sidebarc.html" "urls.py" "views.py" "tag_post.html" "admin.py" "urls.py" "models.py" "urls.py" "views.py<blog>" "views.py<shimablog>" "base.html" "tag_list.html" "base.css" "sidebar.html" "myproject" "Pipfile" "sample1.py" "sample1.c" "sample1.py" "*GNU Emacs*" "package-settings.el" "sample1.c" "*irony-server build*" "package-settings.el" "*GNU Emacs*" "*Packages*" "*Messages*" "*Packages*"))
(setq consult--buffer-history '("*GNU Emacs*􀀁" "*Packages*􀀁"))
(setq consult--line-history '("ul" "logo" "css" "TEMPLATES = [􀗲" "LANGUAGE_CODE = 'en-us'􀬴" "company jed" "company iron" "irony" "company" "auto-complete" "flychec" "org" "embark con" "emacs version" "Emacs"))
(setq extended-command-history '("consult-line" "indent-guide-mode" "consult-line" "indent-guide-mode" "consult-line" "package-list-packages" "consult-line" "jedi:install-server" "eval-buffer" "consult-line" "package-list-packages" "irony-install-server" "consult-line" "package-list-packages" "consult-line" "package-list-packages" "consult-line" "package-list-packages" "consult-buffer" "consult-line" "package-list-packages" "consult-line" "package-list-packages" "embark-act" "consult-goto-line" "embark-act" "consult-find" "consult-buffer" "embark-act" "consult-buffer" "consult-line" "package-list-packages" "embark-act" "consult-line"))
(setq file-name-history '("./" "~/.emacs.d/" "~/Workspace/Fortranlang/sample1.f" "~/Workspace/Fortranlang/" "~/myproject/" "~/myproject/templates/base.html" "~/myproject/blog/templates/blog/sidebarp.html" "~/myproject/static/css/sidebar.css" "~/myproject/static/css/home.css~" "~/myproject/" "~/Sanctuary/dotfiles/.emacs.d/conf/package-settings.el" "myproject/" "~/Workspace/Fortranlang/sample1.f" "~/Sanctuary/dotfiles/.emacs.d/conf/package-settings.el" "~/Workspace/Pylang/sample1.py" "~/Workspace/Clang/sample1.c" "~/Sanctuary/dotfiles/.emacs.d/conf/package-settings.el" "/tmp/build-irony-server-1.5.0/CMakeCache.txt" "~/Workspace/Clang/sample1.c" "~/Sanctuary/dotfiles/.emacs.d/conf/package-settings.el" "~/Workspace/Clang/sample1.c" "~/Sanctuary/dotfiles/.emacs.d/init.el" "~/Sanctuary/dotfiles/.emacs.d/conf/package-settings.el" "~/Sanctuary/dotfiles/.emacs.d/conf/" "~/Workspace/Clang/sample1.c" "~/Sanctuary/dotfiles/.emacs.d/conf/package-settings.el" "~/Sanctuary/dotfiles/.emacs.d/init.el" "~/Sanctuary/dotfiles/.emacs.d/conf/" "~/Sanctuary/dotfiles/.emacs.d/init.el" "~/Sanctuary/dotfiles/.emacs.d/.emacs.d/conf/package-settings.el" "~/Sanctuary/dotfiles/.emacs.d/.emacs.d/"))
